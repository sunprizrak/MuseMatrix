#:import ChangePasswordScreen screens


<ChangeTextField@MDTextField>
    text_color_normal: 'white'
    hint_text_color_normal: 'white'
    helper_text_mode: 'on_error'
    password: True

<ChangePasswordScreen>
    name: 'change_password_screen'

    MDBoxLayout:
        orientation: 'vertical'

        MyTopAppBar:
            type_height: 'small'
            md_bg_color: root.md_bg_color
            title: 'change password'
            anchor_title: 'left'
            left_action_items: [['arrow-left-bold', lambda x: app.back(screen='settings_screen')]]
            elevation: 0

        MDFloatLayout:

            MDBoxLayout:
                orientation: 'vertical'
                spacing: dp(10)
                pos_hint: {'top': 1, 'center_x': .5}
                adaptive_height: True
                size_hint_max_x: dp(300)

                MDRelativeLayout:
                    size_hint: 1, None
                    height: current_password_field.height

                    ChangeTextField:
                        id: current_password_field
                        hint_text: 'Current password'

                    MyIconButton:
                        icon: "eye"
                        pos_hint: {"center_y": .5}
                        pos: current_password_field.width - self.width, 0
                        theme_text_color: "Custom"
                        text_color: current_password_field.text_color_focus if current_password_field.focus else 'white'
                        on_release:
                            self.icon = "eye" if self.icon == "eye-off" else "eye-off"
                            current_password_field.password = False if current_password_field.password is True else True

                MDRelativeLayout:
                    size_hint: 1, None
                    height: new_password_field.height

                    ChangeTextField:
                        id: new_password_field
                        hint_text: 'New password'

                    MyIconButton:
                        icon: "eye"
                        pos_hint: {"center_y": .5}
                        pos: new_password_field.width - self.width, 0
                        theme_text_color: "Custom"
                        text_color: new_password_field.text_color_focus if new_password_field.focus else 'white'
                        on_release:
                            self.icon = "eye" if self.icon == "eye-off" else "eye-off"
                            new_password_field.password = False if new_password_field.password is True else True

                MDRelativeLayout:
                    size_hint: 1, None
                    height: re_new_password_field.height

                    ChangeTextField:
                        id: re_new_password_field
                        hint_text: 'Repeat password'

                    MyIconButton:
                        icon: "eye"
                        pos_hint: {"center_y": .5}
                        pos: re_new_password_field.width - self.width, 0
                        theme_text_color: "Custom"
                        text_color: re_new_password_field.text_color_focus if re_new_password_field.focus else 'white'
                        on_release:
                            self.icon = "eye" if self.icon == "eye-off" else "eye-off"
                            re_new_password_field.password = False if re_new_password_field.password is True else True

                MDRaisedButton:
                    text: 'Change'
                    font_size: sp(25)
                    pos_hint: {'center_x': .5, 'center_y': .3}
                    on_release:
                        root.change_password(current_password_field.text, new_password_field.text, re_new_password_field.text)